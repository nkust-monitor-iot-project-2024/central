version: '3'

tasks:
  gqlgen:
    cmds:
      - go run github.com/99designs/gqlgen generate
    sources:
        - graph/schema.graphqls
    generates:
        - graph/generated.go
        - graph/resolver.go
        - graph/model/**.go

  protoc:
    cmds:
      - bash scripts/protoc.sh
    sources:
      - scripts/protoc.sh
      - protos/**/*.proto
    generates:
      - protos/**/*.pb.go

  generate-models:
    cmds:
      - go generate ./ent
    sources:
        - ent/schema/*.go
    generates:
        - ent/**.go
        - exclude: ent/schema/*.go

  go-mod-tidy:
    internal: true
    cmds:
      - go mod tidy

  generate:
    deps: [protoc, generate-models, go-mod-tidy, gqlgen]

  service-event-aggregator:
    run: once
    deps: [protoc, gqlgen]
    cmds:
      - go build -o out/service-event-aggregator ./cmd/event-aggregator

  service-recognition-facade:
    run: once
    deps: [protoc, gqlgen]
    cmds:
      - go build -o out/service-recognition-facade ./cmd/recognition-facade

  service-public-event-facade:
    run: once
    deps: [protoc, gqlgen]
    cmds:
      - go build -o out/service-public-event-facade ./cmd/public-event-facade

  service-mqtt-forwarder:
    run: once
    deps: [protoc, gqlgen]
    cmds:
      - go build -o out/service-mqtt-forwarder ./cmd/mqtt-forwarder

  service-all:
    run: once
    deps: [service-event-aggregator, service-recognition-facade,
           service-public-event-facade, service-mqtt-forwarder]